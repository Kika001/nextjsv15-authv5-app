import { drizzle } from 'drizzle-orm/neon-http';
import { neon } from '@neondatabase/serverless';
import { users } from '@/database/schema';
import bcrypt from 'bcryptjs';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config({ path: '.env.local' });

if (!process.env.DATABASE_URL) {
  throw new Error('DATABASE_URL environment variable is required');
}

const sql = neon(process.env.DATABASE_URL);
const db = drizzle(sql);

async function seed() {
  try {
    console.log('üå± Initialisation de la base de donn√©es...');

    // Cr√©er un utilisateur admin par d√©faut
    const adminPassword = await bcrypt.hash('admin123', 10);
    
    await db.insert(users).values({
      email: 'admin@example.com',
      name: 'Administrateur',
      password: adminPassword,
      role: 'admin',
    }).onConflictDoNothing();

    console.log('‚úÖ Utilisateur admin cr√©√©:');
    console.log('   Email: admin@example.com');
    console.log('   Mot de passe: admin123');
    console.log('');

    // Cr√©er un utilisateur customer par d√©faut
    const customerPassword = await bcrypt.hash('customer123', 10);
    await db.insert(users).values({
      email: 'customer@example.com',
      name: 'Client Test',
      password: customerPassword,
      role: 'customer',
    }).onConflictDoNothing();
    console.log('‚úÖ Utilisateur customer cr√©√©:');
    console.log('   Email: customer@example.com');
    console.log('   Mot de passe: customer123');
    console.log('');
    console.log('‚ö†Ô∏è  IMPORTANT: Changez ces mots de passe apr√®s la premi√®re connexion!');
    console.log('');
    console.log('üéâ Base de donn√©es initialis√©e avec succ√®s!');
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation:', error);
    process.exit(1);
  }
}

seed();